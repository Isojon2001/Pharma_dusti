import React, { useState } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';
import Breadcrumb from '../components/Breadcrumb';
import FileInputFixedStatus from '../components/FileInputFixedStatus';

function AddBlockPage() {
  const navigate = useNavigate();

  const [title, setTitle] = useState('');
  const [description, setDescription] = useState('');
  const [isActive, setIsActive] = useState(true);
  const [message, setMessage] = useState('');
  const [loading, setLoading] = useState(false);

const handleAddBanner = async () => {
  if (!title.trim()) {
    setMessage('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞');
    return;
  }

  const poster = document.getElementById('poster1')?.files?.[0];
  const file = document.getElementById('poster2')?.files?.[0];

  if (!poster || !file) {
    setMessage('–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±–∞ —Ñ–∞–π–ª–∞ (poster –∏ file)');
    return;
  }

  try {
    const token = localStorage.getItem('accessToken');
    const formData = new FormData();
    formData.append('title', title.trim());
    formData.append('description', description.trim());
    formData.append('is_active', isActive);
    formData.append('poster', poster);
    formData.append('file', file);

    const response = await axios.post(
      'http://api.dustipharma.tj:1212/api/v1/app/admin/banners',
      formData,
      {
        headers: {
          Authorization: `Bearer ${token}`,
          'Content-Type': 'multipart/form-data',
        },
      }
    );

    const { code, message, payload } = response.data;

    if (code === 200 || code === 201) {
      setMessage('–ë–∞–Ω–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω');

      // üëâ –í—ã–≤–æ–¥–∏–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
      const posterPath = payload?.data?.poster_path;
      if (posterPath) {
        const imgUrl = `http://api.dustipharma.tj:1212/api/v1/files/${posterPath}`;
        console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:');
        console.log('URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', imgUrl);
      } else {
        console.warn('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é (poster_path)');
      }

      setTimeout(() => {
        navigate('/mobile');
      }, 1500);
    } else {
      setMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–∞–Ω–Ω–µ—Ä–∞');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.response?.data || error.message);
    setMessage(error.response?.data?.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–∞–Ω–Ω–µ—Ä–∞');
  }
};


  return (
    <div className="add-category-page">
      <Breadcrumb
        className="category_breadcrumb"
        items={[
          { label: 'PanelMobil', to: '/mobile' },
          { label: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞–º–∏' },
        ]}
      />

      <div className="add-category-forms">
        <div className="add-category-paragraph">
          <h2>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞</h2>
          <div className="category_btn">
            <button type="button" onClick={() => navigate('/mobile')}>
              –û—Ç–º–µ–Ω–∏—Ç—å
            </button>
            <button type="button" onClick={handleAddBanner} disabled={loading}>
              {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
            </button>
          </div>
        </div>

        <div className="add-category-form">
          <div className="category-paragraph categories_height_one">
            <p>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</p>
            <input
              type="text"
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
            />
          </div>

          <div className="category-paragraph categories_height_two">
            <p>–û–ø–∏—Å–∞–Ω–∏–µ</p>
            <input
              type="text"
              placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞"
              value={description}
              onChange={(e) => setDescription(e.target.value)}
            />
          </div>

          <div className="category-paragraph">
            <p>–ê–∫—Ç–∏–≤–µ–Ω –ª–∏ –±–∞–Ω–Ω–µ—Ä</p>
            <select value={isActive} onChange={(e) => setIsActive(e.target.value === 'true')}>
              <option value="true">–î–∞</option>
              <option value="false">–ù–µ—Ç</option>
            </select>
          </div>

          {message && <p className="message">{message}</p>}

          <div className="uploading_poster">
            <p>–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å—Ç–µ—Ä</p>
            <FileInputFixedStatus id="poster1" label="–í—ã–±—Ä–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (poster)" />

            <p>–ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª</p>
            <FileInputFixedStatus id="poster2" label="–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª (file)" />
          </div>
        </div>
      </div>
    </div>
  );
}

export default AddBlockPage;
